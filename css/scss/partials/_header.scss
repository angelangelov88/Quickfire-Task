@use '../abstracts/index' as *;

//Styling for the header. I made it fixed so it is on top of anything on scrolling down
header {
    display: flex;
    justify-content: space-around;
    align-items: flex-start;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;        
    z-index: 100;
    background-color: #F8F8F7;
    @media only screen and (min-width: $break-l) {
        justify-content: space-between;
        margin: 0 0 20px 0;
        padding: 10px 50px 10px 50px;
}
}

#header-logo img {
    height: auto;
    width: 115px;
    padding-top: 10px;
    @media only screen and (min-width: $break-s) {
        width: auto;
}
}


//Display or not the hamburger menu depending on the screen size
.btn-menu-xs {
    display: block;
    @media only screen and (min-width: $break-l) {
        display: none;
}
}

#ul-header {
    display: none;
    list-style-type: none;
    @media only screen and (min-width: $break-l) {
        display: flex;
}
}

#ul-header li {
    padding:  0 17px 0 17px;
}

//I removed the padding associated with li elements to make sure I fill the screen as there was a small display issue just before the L breakpoint
#ul-header li:last-child {
    padding-right: 0;
}

#ul-header li:first-child {
    padding-left: 0;
}

#ul-header a {
    text-transform: uppercase;
}

#ul-header p {
    text-transform: capitalize;
}

.li-header-1 {
    z-index: 0;
}

//This adds a transparent/gray background colour to the header on hover, so that it is visible even on white background below
header:hover {
    background-color: rgba($color: #F0F0ED, $alpha: 0.8);
}

//This shows the drop down items on hover on each of the titles
.li-header-1:hover {
    .dropdown-items-1 {
        display: block;
}
}

.li-header-2:hover {
    .dropdown-items-2 {
        display: block;
}
}

.li-header-3:hover {
    .dropdown-items-3 {
        display: block;
}
}

.li-header-4:hover {
    .dropdown-items-4 {
        display: block;
}
}

.dropdown-items-1, 
.dropdown-items-2,
.dropdown-items-3,
.dropdown-items-4 {
    display: none;
}

.header-icons {
    display: flex;
    @media only screen and (min-width: $break-l) {
        padding: 10px;
}
}

.header-icons a {
    padding: 10px;
}

//This is the blocked div which shows when the hamburger menu is clicked and makes the rest of the page not accessible. I have added JS to make the user able to click anywhere on the blocker div to close the hamburger dropdown
.blocker {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background-color: rgba(0, 0, 0, 0.6);
}
  
  //These are the submenu items for the hamburger menu on small screen. They would appear 
#header-small {
    text-transform: uppercase;
    color: white;
    font-weight: 600;
    background-color: rgba($brand-color, 0.8);
    position: absolute;
    top: 73px;
    right: 0;
    border-radius: 4px;
    display: none;
    z-index: 2;
    @media only screen and (min-width: $break-m) {
      display: none;
  }
  }
  
  //Some styling that could not go in the #header-small
  #header-small ul {
    list-style-type: none;
    text-align: end;
    padding-right: 10px;
}
  
//Separating the li elements on small screen (the drop down)
.li-header-small {
    line-height: 45px;
}
  
//Hamburger styling
.btn-menu-xs {
    background-color: $brand-color;
    height: 55px;
    width: 65px;
    border-radius: 4px;
    z-index: 1;
    @media only screen and (min-width: $break-l) {
        display: none;
}
}
  
.btn-menu-xs:hover {
    background-color: $brand-color;
    cursor: pointer;
}
  
  // The next few properties are for the hamburger
.menu-lines {
    padding: 10px 0 4px 16px;
}
  
.menu-x {
    display: none;
    color: white;
    font-size: 40px;
    margin-top: 0px;
    margin-left: 21px;
}
  
.menu-line {
    width: 33px;
    height: 3px;
    background-color: white;
    margin-bottom: 5px;
}
  
.menu-title {
    font-size: 12px;
    text-align: center;
    margin-top: -7px;
    color: white;
    font-weight: 600;
}